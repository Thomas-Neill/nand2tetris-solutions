// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {
    static Array twoToThe;
    static int qy2;
    /** Initializes the library. */
    function void init() {
      let twoToThe = Array.new(16);
      let twoToThe[0] = 1;
      let twoToThe[1] = 2;
      let twoToThe[2] = 4;
      let twoToThe[3] =  8;
      let twoToThe[4] = 16;
      let twoToThe[5] = 32;
      let twoToThe[6] = 64;
      let twoToThe[7] = 128;
      let twoToThe[8] = 256;
      let twoToThe[9] = 512;
      let twoToThe[10] = 1024;
      let twoToThe[11] = 2048;
      let twoToThe[12] = 4096;
      let twoToThe[13] = 8192;
      let twoToThe[14] = 16384;
      let twoToThe[15] = 16384+16384;
      return;
    }

    function bool bit(int n,int where) {
      if((n & twoToThe[where]) = 0) {
        return false;
      }
      return true;
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
      return Math.max(x,-x);
    }

    /** Returns the product of x and y.
     *  When a Jack compiler detects the multiplication operator '*' in the
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x*y and multiply(x,y) return the same value.
     */
    function int multiply(int x, int y) {
      var int result,sx,j;
      let result = 0;
      let sx = x;
      let j = 0;
      while(j < 16) {
        if(Math.bit(y,j)) {
          let result = result + sx;
        }
        let sx = sx + sx;
        let j = j+1;
      }
      return result;
    }

    /** Returns the integer part of x/y.
     *  When a Jack compiler detects the multiplication operator '/' in the
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x/y and divide(x,y) return the same value.
     */
    function int divide(int x, int y) {
      var int sx,sy,result,x_,y_;
      let sx = x > 0;
      let sy = y > 0;
      let x_ = Math.abs(x);
      let y_ = Math.abs(y);
      let result = 0;
      while(true) {
        let x_ = x_ - y_;
        if(x_ = 0) {
          let result = result + 1;
        }
        if((x_ < 0) | (x_ = 0)) {
          if( ((~sx) & (~sy)) | (sx & sy)) { return result;}
          return -result;
        }
        let result = result + 1;
      }
      return -1;
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
      var int lo,hi,med;
      let lo = 0;
      let hi = 181;
      while(lo < hi) {
        let med = (lo + hi)/2;
        if((med*med) > x) {
          let hi = med - 1;
        } else {
          let lo =  med + 1;
        }
      }
      return lo;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
      if(a > b) {
        return a;
      }
      return b;
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
    if(a > b) {
      return b;
    }
    return a;
    }
}
